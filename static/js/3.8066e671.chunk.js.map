{"version":3,"sources":["components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.css","components/Todo/Todo.css","containers/Todos/Todos.css","components/Todo/Todo.js","containers/Todos/Todos.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Spinner_css__WEBPACK_IMPORTED_MODULE_1__","_Spinner_css__WEBPACK_IMPORTED_MODULE_1___default","spinner","props","a","createElement","className","classes","Loader","module","exports","load2","Todo","TodoDetails","TodoCompleted","TodoDescription","optionInput","active","Filter","todo","date","split","reverse","join","todoClasses","completed","push","react_default","Button","btnType","clicked","deleteHandler","completeHandler","Checkbox","checked","readOnly","Todos","state","error","_this","onCompleteHandler","id","token","onUpdateHandler","this","onFetchTodos","userId","_this2","todos","Spinner","todosCounter","reduce","acc","loading","filteredTodos","map","Todo_Todo","key","onDeleteHandler","Auxiliary","isActive","actionTypes","onShowAllTodos","onShowActiveTodos","onShowCompletedTodos","Component","filterTodos","action","filter","connect","todosReducer","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GASeE,IAJC,SAAAC,GAAK,OACjBL,EAAAM,EAAAC,cAAA,OAAKC,UAAWC,IAAQC,QAAxB,oCCLJC,EAAAC,QAAA,CAAkBF,OAAA,yBAAAG,MAAA,8CCAlBF,EAAAC,QAAA,CAAkBE,KAAA,oBAAAC,YAAA,2BAAAC,cAAA,6BAAAC,gBAAA,+BAAAC,YAAA,2BAAAC,OAAA,4CCAlBR,EAAAC,QAAA,CAAkBQ,OAAA,kKCkCHC,EA7BF,SAAAhB,GACX,IAAIiB,EAAOjB,EAAMiB,KACdC,MAAM,KACNC,UACAC,KAAK,KAEFC,EAAc,CAACjB,IAAQM,aAK7B,OAJIV,EAAMsB,WACRD,EAAYE,KAAKnB,IAAQO,eAIzBa,EAAAvB,EAAAC,cAAA,OAAKC,UAAWC,IAAQK,MACtBe,EAAAvB,EAAAC,cAAA,KAAGC,UAAWC,IAAQQ,iBACpBY,EAAAvB,EAAAC,cAAA,6BADF,IACgC,IAC9BsB,EAAAvB,EAAAC,cAAA,QAAMC,UAAWkB,EAAYD,KAAK,MAAOpB,EAAMgB,OAEjDQ,EAAAvB,EAAAC,cAAA,kBAAUe,GACVO,EAAAvB,EAAAC,cAACuB,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAS3B,EAAM4B,eAAxC,UAGAJ,EAAAvB,EAAAC,cAACuB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS3B,EAAM6B,iBAAzC,aAGAL,EAAAvB,EAAAC,cAAC4B,EAAA,EAAD,CAAUR,UAAWtB,EAAMsB,UAAWS,SAAO,EAACC,UAAQ,uEClBtDC,6MACJC,MAAQ,CACNC,MAAOC,EAAKpC,MAAMmC,SAiBpBE,kBAAoB,SAACC,EAAIC,EAAOjB,GAC9Bc,EAAKpC,MAAMwC,gBAAgBF,EAAIC,EAAOjB,uFAdtCmB,KAAKzC,MAAM0C,aAAaD,KAAKzC,MAAMuC,MAAOE,KAAKzC,MAAM2C,yCAiB9C,IAAAC,EAAAH,KACHI,EAAQrB,EAAAvB,EAAAC,cAAC4C,EAAA,EAAD,MACRC,EAAeN,KAAKzC,MAAM6C,MAAMG,OAAO,SAACC,EAAKjC,GAC/C,OAAQA,EAAKM,UAAoB2B,IAANA,GAC1B,GAeH,OAbKR,KAAKzC,MAAMkD,UACdL,EAAQJ,KAAKzC,MAAMmD,cAAcC,IAAI,SAAApC,GAAI,OACvCQ,EAAAvB,EAAAC,cAACmD,EAAD,CACEC,IAAKtC,EAAKsB,GACVtB,KAAMA,EAAKA,KACXC,KAAMD,EAAKC,KACXK,UAAWN,EAAKM,UAChBM,cAAe,kBAAMgB,EAAK5C,MAAMuD,gBAAgBvC,EAAKsB,GAAIM,EAAK5C,MAAMuC,QACpEV,gBAAiB,kBAAMe,EAAKP,kBAAkBrB,EAAKsB,GAAIM,EAAK5C,MAAMuC,MAAOvB,EAAKM,iBAMlFE,EAAAvB,EAAAC,cAACsD,EAAA,EAAD,KACEhC,EAAAvB,EAAAC,cAAA,OAAKC,UAAWC,IAAQW,QACxBS,EAAAvB,EAAAC,cAACuB,EAAA,EAAD,CAAQC,QAAQ,SAAS+B,SAAUhB,KAAKzC,MAAMc,SAAW4C,IAA4B/B,QAAUc,KAAKzC,MAAM2D,gBAA1G,OACAnC,EAAAvB,EAAAC,cAACuB,EAAA,EAAD,CAAQC,QAAQ,SAAS+B,SAAUhB,KAAKzC,MAAMc,SAAW4C,IAA+B/B,QAAUc,KAAKzC,MAAM4D,mBAA7G,UACApC,EAAAvB,EAAAC,cAACuB,EAAA,EAAD,CAAQC,QAAQ,SAAS+B,SAAUhB,KAAKzC,MAAMc,SAAW4C,IAAkC/B,QAASc,KAAKzC,MAAM6D,sBAA/G,cAEArC,EAAAvB,EAAAC,cAAA,KAAGC,UAAWC,IAAQW,QAAtB,aAAyCgC,EAAzC,iBACCF,UAlDWiB,aAwDdC,EAAc,SAAClB,EAAOmB,GAC1B,OAAOA,GACL,KAAKN,IACH,OAAOb,EACT,KAAKa,IACH,OAAOb,EAAMoB,OAAO,SAAAjD,GAAI,OAAsB,IAAnBA,EAAKM,YAClC,KAAKoC,IACH,OAAOb,EAAMoB,OAAO,SAAAjD,GAAI,OAAuB,IAAnBA,EAAKM,YACnC,QACE,OAAOuB,IA0BEqB,sBAtBS,SAAAhC,GACtB,MAAO,CACLiB,cAAeY,EAAY7B,EAAMiC,aAAatB,MAAOX,EAAMiC,aAAaF,QACxEpB,MAAOX,EAAMiC,aAAatB,MAC1BK,QAAShB,EAAMiC,aAAajB,QAC5BX,MAAOL,EAAMkC,KAAK7B,MAClBI,OAAQT,EAAMkC,KAAKzB,OACnB7B,OAAQoB,EAAMiC,aAAaF,SAIJ,SAAAI,GACzB,MAAO,CACL3B,aAAc,SAACH,EAAOI,GAAR,OAAmB0B,EAASC,IAAmB/B,EAAOI,KACpEY,gBAAiB,SAACjB,EAAIC,GAAL,OAAe8B,EAASC,IAAmBhC,EAAIC,KAChEC,gBAAiB,SAACF,EAAIC,EAAOjB,GAAZ,OAA0B+C,EAASC,IAA4BhC,EAAIC,EAAOjB,KAC3FqC,eAAgB,kBAAMU,EAASC,QAC/BV,kBAAmB,kBAAMS,EAASC,QAClCT,qBAAsB,kBAAMQ,EAASC,UAI1BJ,CAGbK,YAAiBtC,EAAOuC","file":"static/js/3.8066e671.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Spinner.css';\r\n\r\n\r\nconst spinner = props => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load2\":\"Spinner__load2__1N7mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo__Todo__3YVhp\",\"TodoDetails\":\"Todo__TodoDetails__2OJcy\",\"TodoCompleted\":\"Todo__TodoCompleted__3nnlY\",\"TodoDescription\":\"Todo__TodoDescription__28ZGC\",\"optionInput\":\"Todo__optionInput__1jL5J\",\"active\":\"Todo__active__1AEPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Todos__Filter__1sGKu\"};","import React from \"react\";\r\n\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Checkbox from '../UI/Checkbox/Checkbox';\r\nimport classes from \"./Todo.css\";\r\n\r\nconst todo = props => {\r\n  let date = props.date\r\n    .split(\"-\")\r\n    .reverse()\r\n    .join(\"-\");\r\n\r\n  const todoClasses = [classes.TodoDetails];\r\n  if (props.completed) {\r\n    todoClasses.push(classes.TodoCompleted);\r\n  \r\n  }\r\n  return (\r\n    <div className={classes.Todo}>\r\n      <p className={classes.TodoDescription}>\r\n        <strong>Stuff to do</strong>:{\" \"}\r\n        <span className={todoClasses.join(\" \")}>{props.todo}</span>\r\n      </p>\r\n      <p>Date: {date}</p>\r\n      <Button btnType=\"Danger\" clicked={props.deleteHandler}>\r\n        Delete\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.completeHandler}>\r\n        Completed\r\n      </Button>\r\n      <Checkbox completed={props.completed} checked readOnly/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default todo;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../axios-todo\";\r\nimport Todo from \"../../components/Todo/Todo\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport classes from './Todos.css';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\n\r\nclass Todos extends Component {\r\n  state = {\r\n    error: this.props.error\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onFetchTodos(this.props.token, this.props.userId);\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (\r\n  //     this.props.todos &&\r\n  //     prevProps.todos &&\r\n  //     this.props.todos.length !== prevProps.todos.length\r\n  //   ) {\r\n  //     this.props.onFetchTodos(this.props.token, this.props.userId);\r\n  //   }\r\n  // }\r\n\r\n  onCompleteHandler = (id, token, completed) => {\r\n    this.props.onUpdateHandler(id, token, completed);\r\n  };\r\n\r\n  render() {\r\n    let todos = <Spinner />;\r\n    let todosCounter = this.props.todos.reduce((acc, todo) => {\r\n      return !todo.completed ? ++acc : acc;\r\n    }, 0);\r\n\r\n    if (!this.props.loading) {\r\n      todos = this.props.filteredTodos.map(todo => (\r\n        <Todo\r\n          key={todo.id}\r\n          todo={todo.todo}\r\n          date={todo.date}\r\n          completed={todo.completed}\r\n          deleteHandler={() => this.props.onDeleteHandler(todo.id, this.props.token)}\r\n          completeHandler={() => this.onCompleteHandler(todo.id, this.props.token, todo.completed)}\r\n        />\r\n      ));\r\n    }\r\n    \r\n    return (\r\n      <Aux>\r\n        <div className={classes.Filter}>\r\n        <Button btnType=\"Filter\" isActive={this.props.active === actionTypes.SHOW_ALL_TODOS} clicked= {this.props.onShowAllTodos}>All</Button>\r\n        <Button btnType=\"Filter\" isActive={this.props.active === actionTypes.SHOW_ACTIVE_TODOS} clicked= {this.props.onShowActiveTodos}>Active</Button>\r\n        <Button btnType=\"Filter\" isActive={this.props.active === actionTypes.SHOW_COMPLETED_TODOS} clicked={this.props.onShowCompletedTodos}>Completed</Button>\r\n        </div>\r\n        <p className={classes.Filter}>You have: {todosCounter} task(s) left</p>\r\n        {todos}\r\n      </Aux>\r\n    )\r\n  }\r\n}\r\n\r\nconst filterTodos = (todos, action) => {\r\n  switch(action) {\r\n    case actionTypes.SHOW_ALL_TODOS:\r\n      return todos;\r\n    case actionTypes.SHOW_ACTIVE_TODOS:\r\n      return todos.filter(todo =>todo.completed !== true);\r\n    case actionTypes.SHOW_COMPLETED_TODOS:\r\n      return todos.filter(todo => todo.completed === true);  \r\n    default:\r\n      return todos;  \r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filteredTodos: filterTodos(state.todosReducer.todos, state.todosReducer.filter),\r\n    todos: state.todosReducer.todos,\r\n    loading: state.todosReducer.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    active: state.todosReducer.filter\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchTodos: (token, userId) => dispatch(actions.fetchTodos(token, userId)),\r\n    onDeleteHandler: (id, token) => dispatch(actions.removeTodo(id, token)),\r\n    onUpdateHandler: (id, token, completed) => dispatch(actions.updateCompletedTodo(id, token, completed)),\r\n    onShowAllTodos: () => dispatch(actions.showAllTodos()),\r\n    onShowActiveTodos: () => dispatch(actions.showActiveTodos()),\r\n    onShowCompletedTodos: () => dispatch(actions.showCompletedTodos())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Todos, axios));\r\n"],"sourceRoot":""}